@inherits UmbracoViewPage<ArticleListPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using GI.BackOffice
@using GI.BackOffice.Models.ViewModelsData
@using Umbraco.Cms.Core.Models
@{
    Layout = "Master.cshtml";
}


@{
    var currentPage = 1;
    if (Context.Request.Query.TryGetValue("page", out var rawPageValue))
    {
        int.TryParse(rawPageValue, out currentPage);
    }

    var articlePage = Umbraco.Content(Guid.Parse("c606cba8-dfeb-4db5-99be-e297710fe601"))
        .Children()
        .Where(x => x.IsVisible())
        .Skip((currentPage - 1) * 6)
        .Take(6)
        .ToList();

    var articlesCount = Umbraco
        .Content(Guid.Parse("c606cba8-dfeb-4db5-99be-e297710fe601"))
        .Children()
        .Count(x => x.IsVisible());

    var homePage = Model.Ancestor<HomePage>();

    var topImage = homePage?.Value<MediaWithCrops<Image>>("topImage");
    var bottomImage = homePage?.Value<MediaWithCrops<Image>>("bottomImage");

    <img class="nk-page-background-top" src="@topImage?.GetUrlWebp()" alt="">
    <img class="nk-page-background-bottom" src="@bottomImage?.GetUrlWebp()" alt="">

    var history = new BreadcrumbViewData
    {
        History = new LinkedList<BreadcrumbJumpViewData>(new List<BreadcrumbJumpViewData>
        {
            new()
            {
                Title = "Home",
                Url = "/"
            },
            new()
            {
                Title = "Articles",
                Url = "/"
            }
        })
    };
}


<!-- Main Content-->
<div class="nk-gap-1"></div>

<div class="container">
    @await Html.PartialAsync("~/Views/Partials/breadcrumb.cshtml", history)
    <div class="nk-blog-grid">
        <div class="row are-images-unloaded">

            @await Html.PartialAsync("~/Views/Partials/articles/grid/default.cshtml", articlePage)

        </div>


        <script>
            /*let grid = document.querySelector('.nk-blog-grid .row');
             *
            window.addEventListener('DOMContentLoaded', () => {
                let msnry = new Masonry( grid, {
                    itemSelector: 'none', // select none at first
                    columnWidth: '.col-md-6',
                    percentPosition: true,
                    stagger: 30,
                    // nicer reveal transition
                    visibleStyle: { transform: 'translateY(0)', opacity: 1 },
                    hiddenStyle: { transform: 'translateY(100px)', opacity: 0 },
                });

                imagesLoaded(grid, function () {
                    grid.classList.remove('are-images-unloaded');
                    msnry.options.itemSelector = 'div.col-md-6';
                    let items = grid.querySelectorAll('div.col-md-6');
                    msnry.appended(items);
                });

                var infScroll = new InfiniteScroll(grid, {
                    path: function() {
                        let pageNumber = this.loadCount + 1;
                        return '@Url.Action("Index", "Article")' + `?page=${pageNumber}&pageSize=6`;
                    },
                    append: 'div.col-md-6', //what to append
                    button: '#view-more-button',
                    // using button, disable loading on scroll
                    scrollThreshold: false,
                    outlayer: msnry,
                    status: '.page-load-status',
                });

            });*/


        </script>

        <div class="nk-gap-2"></div>

        <div class="nk-pagination-center">
            @await Html.PartialAsync("~/Views/Partials/articles/pagination.cshtml", new PaginationViewData
            {
                PageSize = 6,
                TotalCount = articlesCount,
            })
        </div>

    </div>
</div>